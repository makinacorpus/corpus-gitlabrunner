---
# Pushes latests commits inside project container
# and update working copy to it.
- include: "{{GRUNNER_TOP_DIR}}/ansible/playbooks/vars.yml"
  vars: {inc_node: "{{test_node}}"}
- hosts: "{{test_node}}"
  tasks:
    - name: init project skeleton
      shell: |
        if [ ! -d "{{TEST_PROJECT_PATH}}/.git" ];then
          salt-call --retcode-passthrough mc_project.init_project {{ms_project_name}}
        fi
      when: "{{TEST_USE_MAKINASTATES}}"
      tags: project_sync
    - name: "init project skeleton -- dir"
      shell: |
        mkdir -pv  "{{TEST_PROJECT_PATH}}/.git"
      tags: project_sync
      when: "{{not TEST_USE_MAKINASTATES}}"
    - name: Synchronise project code to container
      synchronize:
        compress: false
        src: '{{TEST_ORIGIN_PATH}}/.git/'
        dest: "/{{TEST_PROJECT_PATH}}/.git/"
        rsync_opts:
          - >-
            --rsh='
            ssh
            {{ hostvars[inventory_hostname].ansible_ssh_common_args | default('') }}
            {{ hostvars[inventory_hostname].ansible_ssh_extra_ars | default('') }}
            '
          - '-a'
          - '-z'
          - '-v'
          - '--exclude=config'
      delegate_to: "{{TEST_ORIGIN}}"
      tags: project_sync
    - name: Put project at wanted commit
      shell: |
        cd {{TEST_PROJECT_PATH}}
        git reset --hard {{TEST_COMMIT}}
      tags: project_sync
      when: "{{TEST_USE_MAKINASTATES}}"
    - name: fix perms
      shell: |
        salt-call --retcode-passthrough \
          mc_project.deploy {{ms_project_name}} only=fixperms
      tags: project_sync
      when: "{{TEST_USE_MAKINASTATES}}"
    - name: sync commit
      shell: |
        set -ex
        cd  {{TEST_PROJECT_PATH}}
        git reset --hard {{TEST_COMMIT}}
      tags: project_sync
      when: "{{TEST_USE_MAKINASTATES}}"
    - name: fix perms - post
      shell: |
        salt-call --retcode-passthrough \
          mc_project.deploy {{ms_project_name}} only=fixperms
      tags: project_sync
      when: "{{TEST_USE_MAKINASTATES}}"
