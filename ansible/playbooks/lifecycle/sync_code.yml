---
# Pushes latests commits inside project container
# and update working copy to it.
- include: "{{GRUNNER_TOP_DIR}}/ansible/playbooks/vars.yml"
  vars: {inc_node: "{{test_node | default('all')}}"}
- hosts: "{{test_node|default('all')}}"
  tasks:
    - include_tasks: "../include/utils.yml"
    - name: init project skeleton
      shell: |
        if [ ! -d "{{TEST_PROJECT_PATH}}/.git" ];then
          salt-call -l {{TEST_SALTCALL_LOGLEVEL}} --retcode-passthrough \
            mc_project.init_project {{ms_project_name}} remote_less=True
        fi
      when: "TEST_USE_MAKINASTATES"
      tags: project_sync
    - name: "init project skeleton -- dir"
      file:
        state: directory
        path: "{{TEST_PROJECT_PATH}}/.git"
      tags: project_sync
      when: "not TEST_USE_MAKINASTATES"
    - name: Synchronise project code to container
      synchronize:
        ssh_args: >-
          {{ ansible_ssh_args        | default(ansible_ssh_args       |default('')) }}
          {{ ansible_ssh_common_args | default(ansible_ssh_common_args|default('')) }}
          {{ ansible_ssh_extra_args  | default(ansible_ssh_extra_args |default('')) }}
        compress: false
        set_remote_user: false
        src: "{{TEST_ORIGIN_PATH}}/.git/"
        dest: "{{TEST_PROJECT_PATH}}/../.gitremote/"
        rsync_opts: ["-cav"]
      delegate_to: "{{TEST_ORIGIN}}"
      tags: project_sync
    - name: Stash any changes
      shell: |
        cd {{TEST_PROJECT_PATH}}
        set -e
        vv() { echo "${@}" >&2;"${@}"; }
        if ! git diff --quiet; then vv git stash;fi
      tags: project_sync
    - name: Put project at wanted commit
      shell: |
        cd {{TEST_PROJECT_PATH}}
        set -ex
        git remote rm gitremote || :
        git remote add gitremote $(pwd)/../.gitremote
        git fetch --recurse-submodules=yes gitremote 
        rsync -av --no-group --no-owner --no-perms \
        $(pwd)/../.gitremote/objects/ .git/objects/
        git reset --hard {{TEST_COMMIT}}
      tags: project_sync
    - name: fix perms
      shell: |
        salt-call -l {{TEST_SALTCALL_LOGLEVEL}} --retcode-passthrough \
          mc_project.deploy {{ms_project_name}} only=fixperms
      tags: project_sync
      when: "TEST_USE_MAKINASTATES"
    - name: sync commit
      shell: |
        set -ex
        cd  {{TEST_PROJECT_PATH}}
        git reset --hard {{TEST_COMMIT}}
      tags: project_sync
      when: "TEST_USE_MAKINASTATES"
    - name: fix perms - post
      shell: |
        salt-call -l {{TEST_SALTCALL_LOGLEVEL}} --retcode-passthrough \
          mc_project.deploy {{ms_project_name}} only=fixperms
      tags: project_sync
      when: "TEST_USE_MAKINASTATES"
    #- shell: /bin/false
